{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignItems","justifyContent","color","innerMain","margin","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","maxHeight","avatar","spacing","form","width","marginTop","submit","typography","fontSize","errorMessage","input","linkText","textAlign","App","classes","useState","appID","setAppID","envID","setEnvID","appSecret","setAppSecret","userID","setUserID","geo","setGeo","loginHintToken","setLoginHintToken","myAccount","setMyAccount","generate","envId","appId","userId","authUrl","getAuthUrl","jwtSecret","currentTimestamp","Math","floor","Date","now","data","iss","aud","sub","iat","exp","stringifiedHeader","Utf8","parse","JSON","stringify","typ","alg","encodedHeader","base64url","stringifiedData","encodedData","token","signature","HmacSHA256","signedToken","baseAppsUrl","replace","url","result","toLowerCase","source","encodedSource","Base64","Container","className","Grid","container","component","direction","item","justify","style","flex","Avatar","noValidate","onSubmit","event","preventDefault","e","msg","console","error","FormControl","fullWidth","alignSelf","RadioGroup","row","aria-label","name","value","onChange","target","FormControlLabel","control","Radio","label","labelPlacement","TextField","id","variant","required","Button","type","multiline","FormHelperText","length","Typography","Link","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ced99d40.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport $ from \"jquery\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport Utf8 from \"crypto-js/enc-utf8\";\nimport HmacSHA256 from \"crypto-js/hmac-sha256\";\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"stretch\",\n        justifyContent: \"space-around\",\n        color: \"#2E4355\",\n    },\n    innerMain: {\n        display: \"flex\",\n        margin: \"0\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        color: \"#2E4355\",\n    },\n    image: {\n        backgroundImage:\n            \"url(https://pingidentity.com/content/dam/ping-6-2-assets/open-graph-images/2019/P14C-Build-OG.png)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: \"#576877\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        maxHeight: \"20%\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: \"#2E4355\",\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: \"0\",\n    },\n    submit: {\n        backgroundColor: \"#2E4355\",\n        margin: theme.spacing(1, 0, 1),\n    },\n    typography: {\n        color: \"#2E4355\",\n        fontSize: \"1%\",\n    },\n    errorMessage: {\n        color: \"red\",\n    },\n    input: {\n        margin: theme.spacing(0, 0, 1),\n    },\n    linkText: {\n        margin: theme.spacing(1, 0, 1),\n        textAlign: \"center\",\n        fontSize: \"2rem\",\n    },\n}));\n\nexport default function App() {\n    // Use the above styles.\n    const classes = useStyles();\n\n    // State variables and setters.\n    const [appID, setAppID] = useState(\"\");\n    const [envID, setEnvID] = useState(\"\");\n    const [appSecret, setAppSecret] = useState(\"\");\n    const [userID, setUserID] = useState(\"\");\n    const [geo, setGeo] = useState(\"NA\");\n    const [loginHintToken, setLoginHintToken] = useState(\"\");\n    const [myAccount, setMyAccount] = useState(\"\");\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        try {\n            let result = generate(envID, appID, appSecret, userID, geo);\n            setLoginHintToken(result[\"login_hint_token\"]);\n            setMyAccount(result[\"myaccount\"]);\n        } catch (e) {\n            // Gets the reason for failure.\n            let msg = JSON.stringify(e);\n            console.error(e);\n            console.error(msg);\n        }\n    };\n\n    const handleAppIDChange = (event) => {\n        event.preventDefault();\n        setAppID(event.target.value);\n    };\n\n    const handleEnvIDChange = (event) => {\n        event.preventDefault();\n        setEnvID(event.target.value);\n    };\n\n    const handleAppSecretChange = (event) => {\n        event.preventDefault();\n        setAppSecret(event.target.value);\n    };\n\n    const handleUserIDChange = (event) => {\n        event.preventDefault();\n        setUserID(event.target.value);\n    };\n\n    const handleGeoChange = (event) => {\n        event.preventDefault();\n        setGeo(event.target.value);\n    };\n\n    const generate = (envId, appId, appSecret, userId, geo) => {\n        // JWT generation script adapted from\n        // https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d\n\n        const authUrl = getAuthUrl(geo);\n        var jwtSecret = appSecret;\n\n        // Set headers for JWT\n        var header = {\n            typ: \"JWT\",\n            alg: \"HS256\",\n        };\n\n        // Prepare timestamp in seconds\n        var currentTimestamp = Math.floor(Date.now() / 1000);\n\n        var data = {\n            iss: appId,\n            aud: `${authUrl}/${envId}/as`,\n            sub: userId,\n            iat: currentTimestamp - 300, // be on the safe side in case clocks sync issues\n            exp: currentTimestamp + 60 * 60 * 24, // expiry time is 24 hours\n        };\n\n        // encode header\n        var stringifiedHeader = Utf8.parse(JSON.stringify(header));\n        var encodedHeader = base64url(stringifiedHeader);\n\n        // encode data\n        var stringifiedData = Utf8.parse(JSON.stringify(data));\n        var encodedData = base64url(stringifiedData);\n\n        // build token\n        var token = `${encodedHeader}.${encodedData}`;\n\n        // sign token\n        var signature = HmacSHA256(token, jwtSecret);\n        signature = base64url(signature);\n        var signedToken = `${token}.${signature}`;\n\n        // console.log(\"jwt_signed = \" + signedToken);\n\n        var baseAppsUrl = authUrl.replace(\"auth\", \"apps\");\n        var url = `${baseAppsUrl}/${envId}/myaccount/?login_hint_token=${signedToken}#mfa`;\n\n        var result = {};\n        result[\"login_hint_token\"] = signedToken;\n        result[\"myaccount\"] = url;\n        return result;\n    };\n\n    const getAuthUrl = (geo) => {\n        geo = geo.toLowerCase();\n        switch (geo) {\n            case \"na\":\n                return \"https://auth.pingone.com\";\n            case \"eu\":\n                return \"https://auth.pingone.eu\";\n            case \"ap\":\n                return \"https://auth.pingone.asia\";\n            case \"ort\":\n                return \"https://auth-staging.pingone.com\";\n            case \"test\":\n                return \"https://auth-test.pingone.com\";\n            default:\n                break;\n        }\n    };\n\n    const base64url = (source) => {\n        // Encode in classical base64\n        var encodedSource = Base64.stringify(source);\n\n        // Remove padding equal characters\n        encodedSource = encodedSource.replace(/=+$/, \"\");\n\n        // Replace characters according to base64url specifications\n        encodedSource = encodedSource.replace(/\\+/g, \"-\");\n        encodedSource = encodedSource.replace(/\\//g, \"_\");\n\n        return encodedSource;\n    };\n\n    const copyLoginHintToken = () => {\n        const copyText = $(\"#lht_result\")[0];\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n    };\n\n    const helperText1 =\n        \"If MyAccount fails to open, check:\";\n    const helperText2 =\n        \" 1. The user is enabled and MFA is enabled for the user\";\n    const helperText3 =\n        \" 2. The app is enabled\";\n    const helperText4 =\n        \" 3. You selected the right geography (NA, EU, AP, ORT, TEST)\";\n\n    // $(document).ready(function () {\n    //   $(document).on(\"keyup\", function (evt) {\n    //     $(\".helptext\").css(\"visibility\", \"hidden\");\n    //   });\n    //   $(document).on(\"mouseup\", function (evt) {\n    //     if (evt.target[\"id\"] !== \"tooltip_icon\") {\n    //       $(\".helptext\").css(\"visibility\", \"hidden\");\n    //     }\n    //   });\n    // });\n\n    return (\n        <Container spacing={0} className={classes.root}>\n            <Grid\n                container\n                display=\"flex\"\n                component=\"main\"\n                className={classes.innerMain}\n                direction=\"column\"\n            >\n                <Grid\n                    item\n                    justify=\"center\"\n                    style={{\n                        flex: \"1 1 1\",\n                    }}\n                >\n                    <Avatar className={classes.avatar}>\n                        <LockOpenIcon/>\n                    </Avatar>\n                </Grid>\n\n                <Grid\n                    item\n                    container\n                    display=\"flex\"\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"stretch\"\n                    style={{flex: \"10 1 auto\"}}\n                >\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <FormControl component=\"fieldset\" fullWidth>\n\n                            <Grid\n                                item\n                                className={classes.input}\n                                justify=\"center\"\n                                alignSelf=\"center\"\n                            >\n                                <RadioGroup\n                                    row\n                                    aria-label=\"geo\"\n                                    name=\"geo\"\n                                    value={geo}\n                                    onChange={handleGeoChange}\n                                    style={{justifyContent: \"center\"}}\n                                >\n                                    <FormControlLabel\n                                        value=\"NA\"\n                                        control={<Radio color=\"primary\"/>}\n                                        label=\"NA\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"EU\"\n                                        control={<Radio color=\"primary\"/>}\n                                        label=\"EU\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"AP\"\n                                        control={<Radio color=\"primary\"/>}\n                                        label=\"AP\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"ORT\"\n                                        control={<Radio color=\"primary\"/>}\n                                        label=\"ORT\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"Test\"\n                                        control={<Radio color=\"primary\"/>}\n                                        label=\"TEST\"\n                                        labelPlacement=\"top\"\n                                    />\n                                </RadioGroup>\n                            </Grid>\n                            <Grid item className={classes.input}>\n                                <TextField\n                                    id=\"env-id\"\n                                    label=\"Environment ID\"\n                                    variant=\"outlined\"\n                                    value={envID}\n                                    onChange={handleEnvIDChange}\n                                    fullWidth\n                                    required\n                                />\n                            </Grid>\n                            <Grid item className={classes.input}>\n                                <TextField\n                                    id=\"app-id\"\n                                    label=\"Application ID\"\n                                    variant=\"outlined\"\n                                    value={appID}\n                                    onChange={handleAppIDChange}\n                                    fullWidth\n                                    required\n                                />\n                            </Grid>\n                            <Grid item className={classes.input}>\n                                <TextField\n                                    id=\"app-secret\"\n                                    label=\"Application Secret\"\n                                    variant=\"outlined\"\n                                    value={appSecret}\n                                    onChange={handleAppSecretChange}\n                                    fullWidth\n                                    required\n                                />\n                            </Grid>\n                            <Grid item className={classes.input}>\n                                <TextField\n                                    id=\"user-id\"\n                                    label=\"User ID/Username\"\n                                    variant=\"outlined\"\n                                    value={userID}\n                                    onChange={handleUserIDChange}\n                                    fullWidth\n                                    required\n                                />\n                            </Grid>\n                            <Grid item className={classes.input}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    // onClick={handleSubmit}\n                                    fullWidth\n                                    className={classes.submit}\n                                >\n                                    Generate\n                                </Button>\n                            </Grid>\n                            <Grid item className={classes.input}>\n                                <TextField\n                                    id=\"login-hint-token\"\n                                    label=\"Login Hint Token\"\n                                    variant=\"outlined\"\n                                    value={loginHintToken}\n                                    multiline\n                                    fullWidth\n                                />\n                            </Grid>\n                            <FormHelperText>{helperText1}</FormHelperText>\n                            <FormHelperText>{helperText2}</FormHelperText>\n                            <FormHelperText>{helperText3}</FormHelperText>\n                            <FormHelperText>{helperText4}</FormHelperText>\n                            <Grid item className={classes.input}>\n                                {myAccount.length > 1 ?\n                                    <Typography className={classes.linkText}>\n                                        <Link href={myAccount} target=\"_blank\" rel=\"noreferrer noopener\" color=\"inherit\"\n                                              variant=\"inherit\">\n                                            <LinkIcon/>\n                                            My Account\n                                            <LinkIcon/>\n                                        </Link>\n                                    </Typography> : <></>}\n                            </Grid>\n                        </FormControl>\n                    </form>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}