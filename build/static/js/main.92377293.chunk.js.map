{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignItems","justifyContent","color","innerMain","margin","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","maxHeight","avatar","spacing","form","width","marginTop","submit","typography","fontSize","errorMessage","input","linkText","textAlign","App","classes","useState","appID","setAppID","envID","setEnvID","appSecret","setAppSecret","userID","setUserID","geo","setGeo","loginHintToken","setLoginHintToken","myAccount","setMyAccount","handleSubmit","event","preventDefault","result","generate","console","log","e","msg","JSON","stringify","error","envId","appId","userId","authUrl","getAuthUrl","jwtSecret","currentTimestamp","Math","floor","Date","now","data","iss","aud","sub","iat","exp","stringifiedHeader","Utf8","parse","typ","alg","encodedHeader","base64url","stringifiedData","encodedData","token","signature","HmacSHA256","signedToken","baseAppsUrl","replace","url","toLowerCase","source","encodedSource","Base64","$","document","ready","on","evt","css","target","Container","className","Grid","container","component","direction","item","justify","style","flex","Avatar","noValidate","onSubmit","FormControl","fullWidth","FormHelperText","FormLabel","alignSelf","RadioGroup","row","aria-label","name","value","onChange","FormControlLabel","control","Radio","label","labelPlacement","TextField","id","variant","Button","type","onClick","multiline","Typography","Link","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92377293.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport $ from \"jquery\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport Utf8 from \"crypto-js/enc-utf8\";\nimport HmacSHA256 from \"crypto-js/hmac-sha256\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    justifyContent: \"space-around\",\n    color: \"#2E4355\",\n  },\n  innerMain: {\n    display: \"flex\",\n    margin: \"0\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    color: \"#2E4355\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://pingidentity.com/content/dam/ping-6-2-assets/open-graph-images/2019/P14C-Build-OG.png)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: \"#576877\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    maxHeight: \"20%\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#2E4355\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: \"0\",\n  },\n  submit: {\n    backgroundColor: \"#2E4355\",\n    margin: theme.spacing(1, 0, 1),\n  },\n  typography: {\n    color: \"#2E4355\",\n    fontSize: \"1%\",\n  },\n  errorMessage: {\n    color: \"red\",\n  },\n  input: {\n    margin: theme.spacing(0, 0, 1),\n  },\n  linkText: {\n    margin: theme.spacing(1, 0, 1),\n    textAlign: \"center\",\n    fontSize: \"2rem\",\n  },\n}));\n\nexport default function App() {\n  // Use the above styles.\n  const classes = useStyles();\n\n  // State variables and setters.\n  const [appID, setAppID] = useState(\"\");\n  const [envID, setEnvID] = useState(\"\");\n  const [appSecret, setAppSecret] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [geo, setGeo] = useState(\"NA\");\n  const [loginHintToken, setLoginHintToken] = useState(\"\");\n  const [myAccount, setMyAccount] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    try {\n      let result = generate(envID, appID, appSecret, userID, geo);\n      console.log(result);\n      setLoginHintToken(result[\"login_hint_token\"]);\n      setMyAccount(result[\"myaccount\"]);\n    } catch (e) {\n      // Gets the reason for failure.\n      let msg = JSON.stringify(e);\n      console.error(e);\n      console.error(msg);\n    }\n  };\n\n  const handleAppIDChange = (event) => {\n    event.preventDefault();\n    setAppID(event.target.value);\n  };\n\n  const handleEnvIDChange = (event) => {\n    event.preventDefault();\n    setEnvID(event.target.value);\n  };\n\n  const handleAppSecretChange = (event) => {\n    event.preventDefault();\n    setAppSecret(event.target.value);\n  };\n\n  const handleUserIDChange = (event) => {\n    event.preventDefault();\n    setUserID(event.target.value);\n  };\n\n  const handleGeoChange = (event) => {\n    event.preventDefault();\n    setGeo(event.target.value);\n  };\n\n  const handleClose = () => {};\n\n  const execute = () => {\n    var result = generate(\n      $(\"#envid\").val(),\n      $(\"#appid\").val(),\n      $(\"#appsecret\").val(),\n      $(\"#userid\").val(),\n      $(\"input[name='geo']:checked\").val()\n    );\n    showResult(result);\n  };\n\n  const showResult = (result) => {\n    $(\"#lht_result\").val(result[\"login_hint_token\"]);\n    $(\"#myaccount_href\").attr(\"href\", result[\"myaccount\"]);\n    $(\"#myaccount_result\").css(\"visibility\", \"visible\");\n  };\n\n  const generate = (envId, appId, appSecret, userId, geo) => {\n    // JWT generation script adapted from\n    // https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d\n\n    const authUrl = getAuthUrl(geo);\n    var jwtSecret = appSecret;\n\n    // Set headers for JWT\n    var header = {\n      typ: \"JWT\",\n      alg: \"HS256\",\n    };\n\n    // Prepare timestamp in seconds\n    var currentTimestamp = Math.floor(Date.now() / 1000);\n\n    var data = {\n      iss: appId,\n      aud: `${authUrl}/${envId}/as`,\n      sub: userId,\n      iat: currentTimestamp - 300, // be on the safe side in case clocks sync issues\n      exp: currentTimestamp + 60 * 60 * 24, // expiry time is 24 hours\n    };\n\n    // encode header\n    var stringifiedHeader = Utf8.parse(JSON.stringify(header));\n    var encodedHeader = base64url(stringifiedHeader);\n\n    // encode data\n    var stringifiedData = Utf8.parse(JSON.stringify(data));\n    var encodedData = base64url(stringifiedData);\n\n    // build token\n    var token = `${encodedHeader}.${encodedData}`;\n\n    // sign token\n    var signature = HmacSHA256(token, jwtSecret);\n    signature = base64url(signature);\n    var signedToken = `${token}.${signature}`;\n\n    // console.log(\"jwt_signed = \" + signedToken);\n\n    var baseAppsUrl = authUrl.replace(\"auth\", \"apps\");\n    var url = `${baseAppsUrl}/${envId}/myaccount/?login_hint_token=${signedToken}#mfa`;\n\n    var result = {};\n    result[\"login_hint_token\"] = signedToken;\n    result[\"myaccount\"] = url;\n    return result;\n  };\n\n  const getAuthUrl = (geo) => {\n    geo = geo.toLowerCase();\n    console.log(\"geo\");\n    console.log(geo);\n    switch (geo) {\n      case \"na\":\n        return \"https://auth.pingone.com\";\n      case \"eu\":\n        return \"https://auth.pingone.eu\";\n      case \"ap\":\n        return \"https://auth.pingone.asia\";\n      case \"ort\":\n        return \"https://auth-staging.pingone.com\";\n      case \"test\":\n        return \"https://auth-test.pingone.com\";\n      default:\n        break;\n    }\n  };\n\n  const base64url = (source) => {\n    // Encode in classical base64\n    var encodedSource = Base64.stringify(source);\n\n    // Remove padding equal characters\n    encodedSource = encodedSource.replace(/=+$/, \"\");\n\n    // Replace characters according to base64url specifications\n    encodedSource = encodedSource.replace(/\\+/g, \"-\");\n    encodedSource = encodedSource.replace(/\\//g, \"_\");\n\n    return encodedSource;\n  };\n\n  const copyLoginHintToken = () => {\n    const copyText = $(\"#lht_result\")[0];\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n    /* Copy the text inside the text field */\n    document.execCommand(\"copy\");\n  };\n\n  const helpText =\n    \"If MyAccount fails to open, check:\\n\" +\n    \" 1. The user is enabled and MFA is enabled for the user\\n\" +\n    \" 2. The app is enabled\\n\" +\n    \" 3. You selected the right geography (NA, EU, AP, ORT, TEST)\\n\";\n  const showTooltip = () => {\n    const textHtml =\n      \"If MyAccount fails to open, check:<br>\" +\n      \" 1. The user is enabled and MFA is enabled for the user<br>\" +\n      \" 2. The app is enabled<br>\" +\n      \" 3. You selected the right geography (NA, EU, AP, ORT, TEST)<br>\";\n    if ($(\".helptext\").css(\"visibility\") !== \"visible\") {\n      $(\".helptext\").css(\"visibility\", \"visible\");\n      $(\".helptext\").html(`<span>${textHtml}</span>`);\n    } else {\n      $(\".helptext\").css(\"visibility\", \"hidden\");\n    }\n  };\n\n  $(document).ready(function () {\n    $(document).on(\"keyup\", function (evt) {\n      $(\".helptext\").css(\"visibility\", \"hidden\");\n    });\n    $(document).on(\"mouseup\", function (evt) {\n      if (evt.target[\"id\"] !== \"tooltip_icon\") {\n        $(\".helptext\").css(\"visibility\", \"hidden\");\n      }\n    });\n  });\n\n  return (\n    <Container spacing={0} className={classes.root}>\n      <Grid\n        container\n        display=\"flex\"\n        component=\"main\"\n        className={classes.innerMain}\n        direction=\"column\"\n      >\n        <Grid\n          item\n          justify=\"center\"\n          style={{\n            flex: \"1 1 1\",\n          }}\n        >\n          <Avatar className={classes.avatar}>\n            <LockOpenIcon />\n          </Avatar>\n        </Grid>\n\n        <Grid\n          item\n          container\n          display=\"flex\"\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"stretch\"\n          style={{ flex: \"10 1 auto\" }}\n        >\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <FormControl component=\"fieldset\" fullWidth>\n              <FormHelperText>{helpText}</FormHelperText>\n              <FormLabel component=\"legend\" style={{ alignSelf: \"center\" }}>\n                Prod\n              </FormLabel>\n              <Grid\n                item\n                className={classes.input}\n                justify=\"center\"\n                alignSelf=\"center\"\n              >\n                <RadioGroup\n                  row\n                  aria-label=\"geo\"\n                  name=\"geo\"\n                  value={geo}\n                  onChange={handleGeoChange}\n                  style={{ justifyContent: \"center\" }}\n                >\n                  <FormControlLabel\n                    value=\"NA\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"NA\"\n                    labelPlacement=\"top\"\n                  />\n                  <FormControlLabel\n                    value=\"EU\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"EU\"\n                    labelPlacement=\"top\"\n                  />\n                  <FormControlLabel\n                    value=\"AP\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"AP\"\n                    labelPlacement=\"top\"\n                  />\n                  <FormControlLabel\n                    value=\"ORT\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"ORT\"\n                    labelPlacement=\"top\"\n                  />\n                  <FormControlLabel\n                    value=\"Test\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"TEST\"\n                    labelPlacement=\"top\"\n                  />\n                </RadioGroup>\n              </Grid>\n              <Grid item className={classes.input}>\n                <TextField\n                  id=\"env-id\"\n                  label=\"Environment ID\"\n                  variant=\"outlined\"\n                  value={envID}\n                  onChange={handleEnvIDChange}\n                  fullWidth\n                ></TextField>\n              </Grid>\n              <Grid item className={classes.input}>\n                <TextField\n                  id=\"app-id\"\n                  label=\"Application ID\"\n                  variant=\"outlined\"\n                  value={appID}\n                  onChange={handleAppIDChange}\n                  fullWidth\n                ></TextField>\n              </Grid>\n              <Grid item className={classes.input}>\n                <TextField\n                  id=\"app-secret\"\n                  label=\"Application Secret\"\n                  variant=\"outlined\"\n                  value={appSecret}\n                  onChange={handleAppSecretChange}\n                  fullWidth\n                ></TextField>\n              </Grid>\n              <Grid item className={classes.input}>\n                <TextField\n                  id=\"user-id\"\n                  label=\"User ID/Username\"\n                  variant=\"outlined\"\n                  value={userID}\n                  onChange={handleUserIDChange}\n                  fullWidth\n                ></TextField>\n              </Grid>\n              <Grid item className={classes.input}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit}\n                  fullWidth\n                  className={classes.submit}\n                >\n                  Generate\n                </Button>\n              </Grid>\n              <Grid item className={classes.input}>\n                <TextField\n                  id=\"login-hint-token\"\n                  label=\"Login Hint Token\"\n                  variant=\"outlined\"\n                  value={loginHintToken}\n                  multiline\n                  fullWidth\n                ></TextField>\n              </Grid>\n              <Grid item className={classes.input}>\n                <Typography className={classes.linkText}>\n                  <Link href={myAccount} color=\"inherit\" variant=\"inherit\">\n                    My Account\n                  </Link>\n                </Typography>\n              </Grid>\n            </FormControl>\n          </form>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}